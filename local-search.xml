<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo搭建博客教程及主题设置</title>
    <link href="/2025/06/27/hexo%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%BB%BA/"/>
    <url>/2025/06/27/hexo%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><ol><li>保证nodejs，npm，git这些环境全部配置好。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git version<br>node -v<br>npm -v<br></code></pre></td></tr></table></figure><p>依次执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br>hexo init myBlog<br><span class="hljs-built_in">cd</span> myBlog<br>npm install<br></code></pre></td></tr></table></figure><p>创建好自己本地的博客文件夹，并安装好了相应的依赖。</p><ol><li>首先创建github仓库，绑定一个作为自己的专属博客仓库。</li></ol><p>这里要求github用户名是什么，仓库名称就要为&lt;用户名&gt;.github.io</p><p><img src="/%5Cimg%5C1.png"></p><ol start="2"><li>配置自己本地与远程github仓库的连接(及本机与公网的博客传输)，这里一般使用SSH。</li></ol><p>(要不后面配置中上传博客文件需要科学上网)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/.ssh   //指定目录下<br><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub   //获取ssh密钥<br></code></pre></td></tr></table></figure><p>出现的话说明之前配置过，若未配置，则按下面步骤来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;邮箱地址&quot;</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&#x27;上面的邮箱&#x27;</span>   //之后三次回车<br><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub   //获取ssh密钥，复制下来保存<br></code></pre></td></tr></table></figure><ol start="3"><li>这时再去github上配置好远程的SSHkey，Setting——SSH and GPG keys——new SSHkey</li></ol><p><img src="/%5Cimg%5C2.png"></p><ol start="4"><li>测试连接成功与否，输入命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p><img src="/%5Cimg%5C3.png"></p><p>这样就成功了！</p><ol start="5"><li>开始部署，配置_config.yml文件</li></ol><p>主要是最下部分：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br>deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: git@github.com:wh1826/wh1826.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><p>按自己的信息相应改善。</p><p>再装一个插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>这是博客部署插件，我们需要它来部署远程博客仓库的地址。</p><ol start="6"><li>本地测试</li></ol><p>到这个地方就可以编辑自己的博客了，可以先学会掌握几个hexo的git命令再操作。</p><p>在 my-blog\source_posts 这个目录下是我们的博客md文件，在这上面写作，需要采用markdown格式</p><p>写好之后进行本地测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean    //清除之前的博客缓存<br>hexo g        //generate，生成pubilc博客前端文件<br>hexo s        //启动本地hexo server服务器，用于测试本地博客<br></code></pre></td></tr></table></figure><p>这时访问localhost:4000，看看满不满意。</p><ol start="7"><li>远程部署</li></ol><p>本地看看满意之后就要部署到远程了，这里也是运行命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g -d    //清理缓存后创建博客文件并部署远程(deploy)<br></code></pre></td></tr></table></figure><p>可以在根目录下的.deploy_git文件夹里看到远程上传到github仓库的文件</p><p>访问&lt;用户名&gt;.github.io即可看到自己的博客了！</p><p>(注意)还有一点就是创建md文件时最好使用git命令，不要直接在文件夹里创建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;新文件名称&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/%5Cimg%5C4.png"></p><h3 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h3><ol><li>先安装一个插件，为了渲染各项主题pug文件，不安装会失败</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-renderer-pug --save<br></code></pre></td></tr></table></figure><ol start="2"><li>去各类主题官网下载对应自己喜欢的主题文件即可</li></ol><p>例如：</p><p>还有其它很多</p><p><img src="/%5Cimg%5C5.png"></p><p>保存下载并解压文件到themes目录：</p><p><img src="/%5Cimg%5C6.png"></p><p>这里保证在这个目录下打开就是那些源代码文件，不要再嵌套一层重复目录。</p><ol start="3"><li>上传之后，点击主配置文件.config_yml文件，把theme值改为对应文件夹名：</li></ol><p><img src="/%5Cimg%5C7.png"></p><ol start="4"><li>返回终端：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo s     //本地查看<br>hexo g -d  //远程部署<br></code></pre></td></tr></table></figure><p>记得<strong>clean命令在每次部署之前都要执行一下</strong>，要不然可能会与改动前的文件引起冲突错误，</p><p><strong>另外就是CTRL+F5强制刷新页面</strong>(若页面未变化)。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
